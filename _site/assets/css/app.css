.cf:before,
.cf:after {
  display: table;
  content: "";
}
.cf:after {
  clear: both;
}
*,
*:before,
*:after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
body {
  padding: 0 16%;
  margin: 0 auto 0;
  font-family: "Helvetica Neue", Arial, "Hiragino Sans GB", sans-serif;
  font-size: 2vw;
  line-height: 1.42857143;
  color: #000000;
  text-rendering: optimizelegibility;
  background: #ffffff;
  image-rendering: optimizequality;
  transition: all .3s ease .2s;
}
body:before {
  position: absolute;
  top: 0;
  left: 0;
  z-index: -9999;
  width: 100%;
  height: 1vmax;
  pointer-events: none;
  background: #ff4500;
  content: "";
  opacity: .2;
}
.heading {
  font-family: "Helvetica Neue", Arial, "Hiragino Sans GB", sans-serif;
  font-size: 330%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.06em;
}
.sub-heading {
  font-family: "Helvetica Neue", Arial, "Hiragino Sans GB", sans-serif;
  font-size: 72%;
  font-weight: normal;
  letter-spacing: .08em;
  opacity: .5;
}
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
button,
input,
select[multiple],
textarea {
  background-image: none;
}
a,
button {
  color: #000000;
  text-decoration: none;
  transition: color 0.5s ease, border-color 0.5s ease, background 0.5s ease, opacity 1.5s ease;
}
a:hover,
button:hover,
a:focus,
button:focus {
  border-bottom: .1em solid;
  transition: color 0.1s ease, border-color 0.1s ease, background 0.1s ease, opacity 0.1s ease;
}
img,
hr {
  border: 0;
}
del {
  text-decoration: line-through;
}
::-moz-selection {
  color: #ff4500;
  background: rgba(0, 0, 0, 0.02);
}
::selection {
  color: #ff4500;
  background: rgba(0, 0, 0, 0.02);
}
::-webkit-input-placeholder {
  color: #000000;
  opacity: .1;
}
.logo {
  display: block;
  height: 1vmax;
  margin: 0 0 1.4vmax;
  background: #ff4500;
  opacity: 0;
}
.logo:hover,
.logo:focus {
  border-bottom: none !important;
  background: #000000;
  opacity: 1;
}
.logo h1 {
  height: 0;
  text-indent: -99999em;
}
.navigation {
  margin: 0 0 16vmin;
  margin-right: -1.1em;
  margin-left: -1.1em;
  font-size: 50%;
  font-weight: bold;
  letter-spacing: .45em;
  text-transform: uppercase;
}
.navigation li {
  display: inline-block;
  line-height: 2;
  list-style: none;
}
.navigation li a {
  padding: .5em 1.2em;
}
.navigation li a:hover,
.navigation li a:focus {
  color: #ff4500;
  border: none;
}
.current a {
  color: #ff4500;
}
body:hover .latest {
  color: #ff4500 !important;
}
.content .status {
  margin: 1vmin 0 0;
  font-size: 75%;
  font-weight: bold;
}
.content .status:before {
  display: inline-block;
  width: 0.8em;
  height: 0.8em;
  margin-right: .8vw;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 50%;
  content: "";
}
.content .status.available:before {
  background: #0cf;
}
.content .status.available a {
  color: #0cf;
}
.content .status.unavailable:before {
  background: #ccc;
}
.content .status.unavailable a {
  color: #ccc;
}
.content {
  margin-bottom: 16vmin;
  -webkit-hyphens: auto;
     -moz-hyphens: auto;
      -ms-hyphens: auto;
          hyphens: auto;
}
.content:before,
.content:after {
  display: table;
  content: "";
}
.content:after {
  clear: both;
}
.content article > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content article > *:last-child > *:last-child > *:last-child > *:last-child {
  margin-bottom: 0 !important;
}
.content .post-content > *:first-child,
.content .page-content > *:first-child {
  margin-top: 0;
}
.content .post-content > *:first-child > *:first-child,
.content .page-content > *:first-child > *:first-child {
  margin-top: 0;
}
.content a {
  font-weight: bold;
}
.content p {
  margin: 0 0 1.1em;
  line-height: 1.71428571;
}
.content header {
  padding-bottom: 16vmin;
}
.content header h1 {
  margin: 0 0 .1em;
  font-family: "Helvetica Neue", Arial, "Hiragino Sans GB", sans-serif;
  font-size: 330%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.06em;
  -webkit-hyphens: none;
     -moz-hyphens: none;
      -ms-hyphens: none;
          hyphens: none;
  line-height: 1.1;
}
.content header h1 svg {
  display: block;
  max-width: 100%;
}
.content header h1 svg,
.content header h1 img {
  margin-bottom: .3em;
}
.content header .latest-post {
  margin-top: 16vmin;
  font-size: 80%;
  font-weight: normal;
  line-height: 1.2;
}
.content header .latest-post a {
  font-weight: bold;
}
.content header small {
  display: block;
  margin: 2vmin 0 0;
  letter-spacing: .1em;
}
.content h2,
.content h3,
.content h4,
.content h5,
.content h6 {
  margin: 10vmin 0 1rem;
  font-family: "Helvetica Neue", Arial, "Hiragino Sans GB", sans-serif;
  font-size: 72%;
  font-weight: normal;
  letter-spacing: .08em;
  opacity: .5;
}
.content ul,
.content ol {
  margin: 0 0 1em 1.5em;
}
.content ul li,
.content ol li {
  line-height: 1.71428571;
}
.content ul li > ul,
.content ol li > ul,
.content ul li ol,
.content ol li ol {
  margin-bottom: 0;
}
.content ol {
  margin-left: 1.75em;
}
.content img,
.content video,
.content iframe {
  display: block;
  max-width: 100%;
  margin: 0 0 4vmin;
}
.content blockquote {
  position: relative;
  margin-bottom: 2em;
}
.content blockquote > p {
  padding-left: .8em;
  border-left: 2px solid;
}
.content blockquote footer:before,
.content blockquote footer:after {
  display: table;
  content: "";
}
.content blockquote footer:after {
  clear: both;
}
.content blockquote cite {
  float: right;
  font-size: 90%;
  font-style: normal;
}
.content blockquote cite:before {
  content: "\2500\2500\00a0";
}
.content sup {
  font-size: 75%;
}
.content abbr {
  border-bottom: 1px dashed;
}
.content code,
.content pre {
  font-family: Menlo, monospace;
  color: #0095cc;
}
.content pre {
  padding: 1em;
  margin: 0 0 1em;
  overflow-x: scroll;
  font-size: 90%;
  line-height: 1.71428571;
  background: rgba(0, 136, 255, 0.04);
}
.content form input {
  display: block;
  width: 100%;
  padding: 1vmin 0;
  margin: 0 0 1vmin;
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0;
  outline: none;
  transition: padding .2s ease;
}
.content form input:focus {
  padding: 1vmin;
  background: rgba(0, 0, 0, 0.02);
  border-color: #000000;
}
.content input:focus:required:invalid:focus,
.content textarea:focus:required:invalid:focus,
.content select:focus:required:invalid:focus {
  background: rgba(255, 69, 0, 0.05);
  border-color: #ff4500;
  box-shadow: none;
}
.content table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 90%;
  width: 100%;
  margin: 0 0 1em;
}
.content table th,
.content table td {
  padding: .6em;
}
.content table th {
  border-bottom: 2px solid rgba(0, 0, 0, 0.06);
  text-align: left;
}
.content table td {
  border-top: 1px solid rgba(0, 0, 0, 0.04);
}
[lang=zh],
[lang=ja] {
  text-align: justify;
}
[lang=zh] header,
[lang=ja] header {
  text-align: start;
}
.margin-fix:first-letter {
  margin-left: -0.6em;
}
.tweet {
  margin-top: 10vmin;
}
.largetype {
  font-family: "Helvetica Neue", Arial, "Hiragino Sans GB", sans-serif;
  font-size: 330%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.06em;
  font-size: 200%;
  margin-bottom: .5em !important;
}
.browser {
  position: relative;
  padding-top: 24px;
  margin: 0 0 4vmin !important;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 5px 5px 0 0;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05);
}
.browser:before {
  position: absolute;
  top: 8px;
  left: 10px;
  display: block;
  width: 8px;
  height: 8px;
  background: #fcdddf;
  border-radius: 50%;
  content: "";
  box-shadow: 16px 0 0 0 rgba(254, 240, 203, 0.96), 32px 0 0 0 rgba(177, 247, 185, 0.96), 0 0 0 1px rgba(156, 11, 21, 0.3), 16px 0 0 1px rgba(147, 108, 4, 0.3), 32px 0 0 1px rgba(11, 107, 22, 0.3);
}
.browser img {
  margin: 0;
  box-shadow: 0 -1px 0 0 rgba(0, 0, 0, 0.05);
}
.note,
.store,
.download {
  padding-left: .8em;
  border-left: 2px solid #ff4500;
}
.footnotes {
  font-size: 90%;
  font-style: italic;
}
:target [rev=footnote],
:target [rel=footnote] {
  color: #ff4500;
}
.list {
  display: block;
  margin: 0 0 1.4vmin;
}
.list h1 {
  font-family: "Helvetica Neue", Arial, "Hiragino Sans GB", sans-serif;
  font-size: 330%;
  -webkit-font-smoothing: antialiased;
  font-weight: bold;
  letter-spacing: -0.06em;
  font-size: 200%;
  line-height: 1.2;
  opacity: 1;
  margin: 0;
}
.list .external:hover,
.list .external:focus {
  border: none;
}
.external {
  line-height: 1;
}
.external span {
  display: inline-block;
  width: .2em;
  height: .2em;
  margin: 0 .1em;
  vertical-align: middle;
  background: #000000;
  border-radius: 50%;
  transition: -webkit-transform .4s ease;
  transition: transform .4s ease;
}
.external:hover span,
.external:focus span {
  -webkit-transform: scale(1.4);
      -ms-transform: scale(1.4);
          transform: scale(1.4);
}
.footer {
  padding: 0 0 16vmin;
  font-size: 72%;
  text-transform: lowercase;
}
.footer ul li {
  display: inline;
}
.footer ul li:after {
  padding: 0 .6vw;
  content: " / ";
  opacity: .3;
}
.footer ul li:last-child:after {
  content: none;
}
@media (max-width: 1000px) {
  body {
    padding-left: 8%;
    padding-right: 8%;
    font-size: 2.8vw;
  }
}
@media (max-width: 640px) {
  body {
    padding-left: 4%;
    padding-right: 4%;
    font-size: 4vw;
  }
  .content header h1 {
    font-size: 280%;
  }
  .content header h1 svg,
  .content header h1 img {
    width: 100% !important;
    height: 100% !important;
  }
  .list h1 .external {
    display: none;
  }
}
@media (max-width: 400px) {
  body {
    font-size: 5.6vw;
  }
}
@media (max-device-width: 480px), (max-device-width: 1024px) {
  body {
    -webkit-text-size-adjust: none;
  }
}
.highlight pre {
  background: rgba(229, 163, 138, 0.1);
}
.highlight code {
  color: #db8d70;
}
.highlight .c {
  color: #e09270;
  font-style: italic;
}
.highlight .err {
  color: #e46b4e;
  background-color: #e3d2d2;
}
.highlight .cm {
  color: #e09270;
  font-style: italic;
}
.highlight .cp {
  color: #e09275;
  font-weight: bold;
}
.highlight .c1 {
  color: #e09270;
  font-style: italic;
}
.highlight .cs {
  color: #e09275;
  font-weight: bold;
  font-style: italic;
}
.highlight .gd {
  color: #b36447;
  background-color: #ffdddd;
}
.highlight .gd .x {
  color: #b36447;
  background-color: #ffaaaa;
}
.highlight .gr {
  color: #e66447;
}
.highlight .gh {
  color: #e09275;
}
.highlight .gi {
  color: #b36447;
  background-color: #ddffdd;
}
.highlight .gi .x {
  color: #b36447;
  background-color: #aaffaa;
}
.highlight .go {
  color: #db8d70;
}
.highlight .gp {
  color: #cc7e61;
}
.highlight .gu {
  color: #e6977a;
}
.highlight .gt {
  color: #e66447;
}
.highlight .kt {
  color: #c77e70;
  font-weight: bold;
}
.highlight .m {
  color: #b39275;
}
.highlight .s {
  color: #f5695c;
}
.highlight .na {
  color: #b38b6e;
}
.highlight .nb {
  color: #b38d7d;
}
.highlight .nc {
  color: #c77e70;
  font-weight: bold;
}
.highlight .no {
  color: #b38b6e;
}
.highlight .ni {
  color: #d9646e;
}
.highlight .ne {
  color: #e06447;
  font-weight: bold;
}
.highlight .nf {
  color: #e06447;
  font-weight: bold;
}
.highlight .nn {
  color: #cc7e61;
}
.highlight .nt {
  color: #b3646e;
}
.highlight .nv {
  color: #b38b6e;
}
.highlight .w {
  color: #eb9c7f;
}
.highlight .mf {
  color: #b39275;
}
.highlight .mh {
  color: #b39275;
}
.highlight .mi {
  color: #b39275;
}
.highlight .mo {
  color: #b39275;
}
.highlight .sb {
  color: #f5695c;
}
.highlight .sc {
  color: #f5695c;
}
.highlight .sd {
  color: #f5695c;
}
.highlight .s2 {
  color: #f5695c;
}
.highlight .se {
  color: #f5695c;
}
.highlight .sh {
  color: #f5695c;
}
.highlight .si {
  color: #f5695c;
}
.highlight .sx {
  color: #f5695c;
}
.highlight .sr {
  color: #b39253;
}
.highlight .s1 {
  color: #f5695c;
}
.highlight .ss {
  color: #e0646a;
}
.highlight .bp {
  color: #e09275;
}
.highlight .vc {
  color: #b38b6e;
}
.highlight .vg {
  color: #b38b6e;
}
.highlight .vi {
  color: #b38b6e;
}
.highlight .il {
  color: #b39275;
}
.highlight .k {
  font-weight: bold;
}
.highlight .o {
  font-weight: bold;
}
.highlight .gs {
  font-weight: bold;
}
.highlight .kc {
  font-weight: bold;
}
.highlight .kd {
  font-weight: bold;
}
.highlight .kp {
  font-weight: bold;
}
.highlight .kr {
  font-weight: bold;
}
.highlight .ow {
  font-weight: bold;
}
.highlight .ge {
  font-style: italic;
}
.loaded .intense-wrap article p > img:not(.nointense) {
  cursor: -webkit-zoom-in;
  cursor: zoom-in;
}
.loaded.intense-open {
  cursor: -webkit-zoom-out;
  cursor: zoom-out;
}
.gist {
  font-size: 100% !important;
}
.gist code,
.gist pre {
  padding: 0;
  color: inherit;
  background-color: transparent;
}
.gist .gist-data {
  font-family: Menlo, monospace !important;
}
.gist .gist-data .file-data {
  font-size: 100% !important;
}
.gist .gist-data .file-data > table {
  margin-bottom: 0 !important;
}
.gist .markdown-body {
  padding: 1em !important;
}
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  body {
    padding: 10mm !important;
    margin: 0 !important;
  }
  a,
  a:visited {
    text-decoration: none;
  }
  .content .post-content,
  .content .page-content {
    max-width: 100% !important;
  }
  .content .post-content a[href]:after,
  .content .page-content a[href]:after {
    content: " (" attr(href) ")";
    font-weight: normal;
  }
  .content .post-content a[href^="#"]:after,
  .content .page-content a[href^="#"]:after,
  .content .post-content a[href^="javascript:"]:after,
  .content .page-content a[href^="javascript:"]:after {
    content: "";
  }
  .content .post-content abbr[title]:after,
  .content .page-content abbr[title]:after {
    content: " (" attr(title) ")";
    font-weight: normal;
  }
  pre,
  blockquote {
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  p,
  h2,
  h3,
  h4,
  h5,
  h6 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
  .navigation,
  .footer {
    display: none;
  }
}
.content .list h2 a,
.content header h1,
.content header h1 a {
  color: #ff4500;
}
.content h2 {
  font-size: 108%;
  opacity: .6;
}
.content h3 {
  font-size: 96%;
  opacity: .5;
}
.content h4 {
  font-size: 84%;
  opacity: .4;
}
.content h5 {
  font-size: 72%;
  opacity: .3;
}
.content h6 {
  font-size: 60%;
  opacity: .2;
}
.amsf-logo {
  display: inline-block;
  width: 8.6vw;
  height: 8.6vw;
  margin: 1vw;
  margin-left: 0;
  vertical-align: middle;
}
@media (max-width: 640px) {
  .amsf-logo {
    width: 20.64vw;
    height: 20.64vw;
  }
}
.amsf-logo path,
.amsf-logo circle {
  stroke-width: 76px;
  stroke-linecap: square;
}
.amsf-title {
  display: inline-block;
  color: #ff4500;
  vertical-align: middle;
}
/*# sourceMappingURL=data:application/json;base64, */